// Date: 1/24/2016 2:42:10 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Purtanium.Entitys;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelPurtanium extends ModelBase
{
	//fields
	ModelRenderer Nose;
	ModelRenderer Head;
	ModelRenderer Right_Arm;
	ModelRenderer Left_Arm;
	ModelRenderer Body;
	ModelRenderer Left_Leg;
	ModelRenderer Right_Leg;

	public ModelPurtanium()
	{
		textureWidth = 64;
		textureHeight = 32;

		Nose = new ModelRenderer(this, 38, 20);
		Nose.addBox(0F, 0F, 0F, 2, 1, 1);
		Nose.setRotationPoint(-1F, 4F, -5F);
		Nose.setTextureSize(64, 32);
		Nose.mirror = true;
		setRotation(Nose, 0F, 0F, 0F);
		Head = new ModelRenderer(this, 0, 0);
		Head.addBox(-4F, -4F, -4F, 8, 8, 8);
		Head.setRotationPoint(0F, 4F, 0F);
		Head.setTextureSize(64, 32);
		Head.mirror = true;
		setRotation(Head, 0F, 0F, 0F);
		Right_Arm = new ModelRenderer(this, 46, 0);
		Right_Arm.addBox(-2F, -1F, -1F, 2, 8, 2);
		Right_Arm.setRotationPoint(-2F, 10F, 0F);
		Right_Arm.setTextureSize(64, 32);
		Right_Arm.mirror = true;
		setRotation(Right_Arm, 0F, 0F, 0F);
		Left_Arm = new ModelRenderer(this, 37, 0);
		Left_Arm.addBox(0F, -1F, -1F, 2, 8, 2);
		Left_Arm.setRotationPoint(2F, 10F, 0F);
		Left_Arm.setTextureSize(64, 32);
		Left_Arm.mirror = true;
		setRotation(Left_Arm, 0F, 0F, 0F);
		Body = new ModelRenderer(this, 1, 17);
		Body.addBox(-2F, 0F, -2F, 4, 8, 4);
		Body.setRotationPoint(0F, 8F, 0F);
		Body.setTextureSize(64, 32);
		Body.mirror = true;
		setRotation(Body, 0F, 0F, 0F);
		Left_Leg = new ModelRenderer(this, 18, 19);
		Left_Leg.addBox(-1F, 0F, -1F, 2, 8, 2);
		Left_Leg.setRotationPoint(-1F, 16F, 0F);
		Left_Leg.setTextureSize(64, 32);
		Left_Leg.mirror = true;
		setRotation(Left_Leg, 0F, 0F, 0F);
		Right_Leg = new ModelRenderer(this, 27, 19);
		Right_Leg.addBox(-1F, 0F, -1F, 2, 8, 2);
		Right_Leg.setRotationPoint(1F, 16F, 0F);
		Right_Leg.setTextureSize(64, 32);
		Right_Leg.mirror = true;
		setRotation(Right_Leg, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{

		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		Nose.render(f5);
		Head.render(f5);
		Right_Arm.render(f5);
		Left_Arm.render(f5);
		Body.render(f5);
		Left_Leg.render(f5);
		Right_Leg.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		float f6 = (180F / (float)Math.PI);
		this.Left_Arm.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;  
	    this.Right_Arm.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1; 
	    this.Left_Leg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;  
	    this.Right_Leg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;  
	}

}
