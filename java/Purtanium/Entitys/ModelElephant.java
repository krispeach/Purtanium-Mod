// Date: 1/24/2016 4:01:51 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Purtanium.Entitys;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelElephant extends ModelBase
{
	//fields
	ModelRenderer head;
	ModelRenderer right_ear;
	ModelRenderer left_ear;
	ModelRenderer body;
	ModelRenderer left_arm;
	ModelRenderer right_arm;
	ModelRenderer right_leg;
	ModelRenderer left_leg;
	ModelRenderer trunk1;
	ModelRenderer trunk2;
	ModelRenderer trunk3;

	public ModelElephant()
	{
		textureWidth = 256;
		textureHeight = 128;

		head = new ModelRenderer(this, 20, 2);
		head.addBox(-6F, -6F, -6F, 12, 12, 12);
		head.setRotationPoint(0F, 0F, 0F);
		head.setTextureSize(256, 128);
		head.mirror = true;
		setRotation(head, 0F, 0F, 0F);
		right_ear = new ModelRenderer(this, 0, 2);
		right_ear.addBox(-8F, -3F, 0F, 8, 8, 1);
		right_ear.setRotationPoint(-5F, -1F, 3F);
		right_ear.setTextureSize(256, 128);
		right_ear.mirror = true;
		setRotation(right_ear, 0F, 0F, 0F);
		left_ear = new ModelRenderer(this, 70, 2);
		left_ear.addBox(0F, -3F, 0F, 8, 8, 1);
		left_ear.setRotationPoint(5F, -1F, 3F);
		left_ear.setTextureSize(256, 128);
		left_ear.mirror = true;
		setRotation(left_ear, 0F, 0F, 0F);
		body = new ModelRenderer(this, 0, 28);
		body.addBox(-9F, -3F, -1F, 18, 14, 30);
		body.setRotationPoint(0F, 2F, 6F);
		body.setTextureSize(256, 128);
		body.mirror = true;
		setRotation(body, 0F, 0F, 0F);
		left_arm = new ModelRenderer(this, 70, 74);
		left_arm.addBox(-2F, 0F, -2F, 4, 13, 4);
		left_arm.setRotationPoint(6F, 11F, 8F);
		left_arm.setTextureSize(256, 128);
		left_arm.mirror = true;
		setRotation(left_arm, 0F, 0F, 0F);
		right_arm = new ModelRenderer(this, 0, 74);
		right_arm.addBox(-2F, 0F, -2F, 4, 13, 4);
		right_arm.setRotationPoint(-6F, 11F, 8F);
		right_arm.setTextureSize(256, 128);
		right_arm.mirror = true;
		setRotation(right_arm, 0F, 0F, 0F);
		right_leg = new ModelRenderer(this, 0, 94);
		right_leg.addBox(-2F, 0F, -2F, 4, 13, 4);
		right_leg.setRotationPoint(-6F, 11F, 32F);
		right_leg.setTextureSize(256, 128);
		right_leg.mirror = true;
		setRotation(right_leg, 0F, 0F, 0F);
		left_leg = new ModelRenderer(this, 70, 94);
		left_leg.addBox(-2F, 0F, -2F, 4, 13, 4);
		left_leg.setRotationPoint(6F, 11F, 32F);
		left_leg.setTextureSize(256, 128);
		left_leg.mirror = true;
		setRotation(left_leg, 0F, 0F, 0F);
		trunk1 = new ModelRenderer(this, 31, 73);
		trunk1.addBox(-2F, -2F, -4F, 4, 4, 4);
		trunk1.setRotationPoint(0F, 2F, -5F);
		trunk1.setTextureSize(256, 128);
		trunk1.mirror = true;
		setRotation(trunk1, 0F, 0F, 0F);
		trunk2 = new ModelRenderer(this, 34, 83);
		trunk2.addBox(-1.5F, 0F, -1.5F, 3, 8, 3);
		trunk2.setRotationPoint(0F, 2F, -8F);
		trunk2.setTextureSize(256, 128);
		trunk2.mirror = true;
		setRotation(trunk2, -0.5759587F, 0F, 0F);
		trunk3 = new ModelRenderer(this, 34, 98);
		trunk3.addBox(-1.5F, 0F, -1.5F, 3, 8, 3);
		trunk3.setRotationPoint(0F, 8F, -12F);
		trunk3.setTextureSize(256, 128);
		trunk3.mirror = true;
		setRotation(trunk3, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		head.render(f5);
		right_ear.render(f5);
		left_ear.render(f5);
		body.render(f5);
		left_arm.render(f5);
		right_arm.render(f5);
		right_leg.render(f5);
		left_leg.render(f5);
		trunk1.render(f5);
		trunk2.render(f5);
		trunk3.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		float f6 = (180F / (float)Math.PI);
		this.left_arm.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;  
	    this.right_arm.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1; 
	    this.left_leg.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;  
	    this.right_leg.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;  
	}

}
